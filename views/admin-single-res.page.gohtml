{{template "admin" .}}

{{define "adminsubpage"}}
    <div class="admin-single-res">
        {{$res := index .Data "reservation"}}
        <form action="/admin/api/updateReservation" method="POST" class="admin-single-res-form">
            <input type="text" hidden name="csrf_token" value="{{.CSRF}}" />
            <input name="id" value="{{.Data.id}}" hidden />

            <div class="form-group mt-3">
                <label for="email">Email:</label>
                {{with .Form.Errors.Get "email"}}
                    <label class="text-danger">{{.}}</label>
                {{end}}
                <input class="form-control {{with .Form.Errors.Get "email"}} is-invalid  {{end}}" id="email"
                       autocomplete="off" type='email'
                       name='email' value="{{with $res.Email}}{{.}}{{end}}">
            </div>
            <div class="form-group mt-3">
                <label for="first_name">firstname:</label>
                {{with .Form.Errors.Get "first_name"}}
                    <label class="text-danger">{{.}}</label>
                {{end}}
                <input class="form-control {{with .Form.Errors.Get "first_name"}} is-invalid  {{end}}" id="first_name"
                       autocomplete="off" type='first_name'
                       name='first_name' value="{{with $res.FirstName}}{{.}}{{end}}">
            </div>
            <div class="form-group mt-3">
                <label for="last_name">lastname:</label>
                {{with .Form.Errors.Get "last_name"}}
                    <label class="text-danger">{{.}}</label>
                {{end}}
                <input class="form-control {{with .Form.Errors.Get "last_name"}} is-invalid  {{end}}" id="last_name"
                       autocomplete="off" type='last_name'
                       name='last_name' value="{{with $res.LastName}}{{.}}{{end}}">
            </div>
            <div class="form-group mt-3">
                <label for="phone">phone:</label>
                {{with .Form.Errors.Get "phone"}}
                    <label class="text-danger">{{.}}</label>
                {{end}}
                <input class="form-control {{with .Form.Errors.Get "phone"}} is-invalid  {{end}}" id="phone"
                       autocomplete="off" type='phone'
                       name='phone' value="{{with $res.Phone}}{{.}}{{end}}">
            </div>

            <button class="btn btn-primary mt-5" type="submit">Update Reservation</button>
            <button class="btn-mark-as-processed mt-5 btn btn-success" type="button">Mark as Complete</button>
            <button class="btn-delete-reservation mt-5 btn btn-danger" type="button">Delete reservation</button>
            <br />
            <button class="cancel-update-res mt-1 btn btn-secondary" type="button">Cancel</button>
        </form>
    </div>
    <script defer>
        const cancelBtn = document.querySelector(".cancel-update-res");
        const deleteBtn = document.querySelector(".btn-delete-reservation");
        const completeBtn = document.querySelector(".btn-mark-as-processed");

        cancelBtn.addEventListener("click" , ()=> {
            window.location.replace("http://localhost:3000/admin/reservations")
        });

        deleteBtn.addEventListener("click" , ()=> {
            let formData = new FormData();
            formData.append("csrf_token" , {{.CSRF}});
            formData.append("id" , {{.Data.id}});
 
            fetch("/admin/api/deleteReservation" , {
                method: "POST",
                body: formData
            }).then(res => res.json())
            .then(json => {
                if (json.status === 200) {
                    Notify(json.msg , "success")
                    setTimeout(()=> {
                        window.location.replace("http://localhost:3000/admin/reservations")
                    } , 2000);
                    return
                } else {
                    Notify("we have problem on server" , "error")
                }
            }).catch(err => {
                Notify("we have problem on server" , "error")
            })
        });

        completeBtn.addEventListener("click" , ()=> {
            let formData = new FormData();
            formData.append("csrf_token" , {{.CSRF}});
            formData.append("id" , {{.Data.id}});

            fetch("/admin/api/completeReservation" , {
                method: "POST",
                body: formData
            }).then(res => res.json())
            .then(json => {
                if (json.status === 200) {
                    Notify(json.msg , "success")
                    setTimeout(()=> {
                        window.location.replace("http://localhost:3000/admin/reservations")
                    } , 2000);
                    return
                } else {
                    Notify("we have problem on server" , "error")
                }
            }).catch(err => {
                Notify("we have problem on server" , "error")
            });
        });
    </script>
{{end}}